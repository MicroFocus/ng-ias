mf-input-container input,
mf-input-container select,
mf-input-container textarea {
  background-color: $input-bg-color;
  border: $input-border;
  border-radius: $border-radius;
  color: inherit;
  padding: $input-padding;

  font-size: 15px;

  &::-ms-clear {
    display: none;
  }

  &:focus {
    //@include focus-state;
  }

  &[disabled] {
    @include disabled-state;
  }
}

mf-input-container > span.mf-icon-input-container {
  position: relative;
  border: $input-border;
  display: inline-block;
}

mf-input-container > span.mf-icon-input-container input {
  border: none;
  padding-left: 28px;
}

mf-input-container > span.mf-icon-input-container mf-icon {
  position: absolute;
  left: 0px;
  top: 6px;
  pointer-events: none;
}

mf-input-container input,
mf-input-container textarea {
  min-width: 250px;
}

mf-input-container input.inputError,
mf-input-container textarea.inputError,
mf-input-container input.inputError:focus,
mf-input-container textarea.inputError:focus {
  border-color: $error-border-color;
}

mf-input-container input.mfIntInput {
    min-width: 50px;
    width: 50px;
}

mf-input-container label {
  @include disable-text-selection;

  color: $input-label-text-color;
  display: block;
  font-size: $input-label-font-size;
  margin: $input-label-margin;
  vertical-align: middle;
}

mf-input-container {
  display: block;
  margin-bottom: $spacing;

  &.mf-inline {
    display: inline-block;

    &:not(:last-of-type) {
      margin-right: $spacing;
    }

    label {
      display: inline-block;
      margin-right: $spacing;
    }
  }
}

[dir="rtl"] {
    mf-input-container {
      &.mf-inline {
        label {
          margin-right: auto;
          margin-left: $spacing;
        }
      }
    }
    
    mf-input-container > span.mf-icon-input-container mf-icon {
      left: auto;
      right: 0px;
    }
    
    mf-input-container > span.mf-icon-input-container input {
      border: none;
      padding-left: none;
      padding-right: 28px;
    }
}